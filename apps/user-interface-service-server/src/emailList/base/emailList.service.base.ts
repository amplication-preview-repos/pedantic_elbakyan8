/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, EmailList as PrismaEmailList } from "@prisma/client";

export class EmailListServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.EmailListCountArgs, "select">
  ): Promise<number> {
    return this.prisma.emailList.count(args);
  }

  async emailLists<T extends Prisma.EmailListFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.EmailListFindManyArgs>
  ): Promise<PrismaEmailList[]> {
    return this.prisma.emailList.findMany<Prisma.EmailListFindManyArgs>(args);
  }
  async emailList<T extends Prisma.EmailListFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.EmailListFindUniqueArgs>
  ): Promise<PrismaEmailList | null> {
    return this.prisma.emailList.findUnique(args);
  }
  async createEmailList<T extends Prisma.EmailListCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.EmailListCreateArgs>
  ): Promise<PrismaEmailList> {
    return this.prisma.emailList.create<T>(args);
  }
  async updateEmailList<T extends Prisma.EmailListUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.EmailListUpdateArgs>
  ): Promise<PrismaEmailList> {
    return this.prisma.emailList.update<T>(args);
  }
  async deleteEmailList<T extends Prisma.EmailListDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.EmailListDeleteArgs>
  ): Promise<PrismaEmailList> {
    return this.prisma.emailList.delete(args);
  }
}
